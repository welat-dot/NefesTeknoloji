// <auto-generated />
using System;
using DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrate
{
    [DbContext(typeof(NefesContext))]
    [Migration("20220420040038_InitialMigrate")]
    partial class InitialMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("EntityLayer.Birim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BirimAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Birim");
                });

            modelBuilder.Entity("EntityLayer.Personel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BirimId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoyAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.ToTable("Personel");
                });

            modelBuilder.Entity("EntityLayer.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e26993e8-0c18-4ee2-8f54-17b08e5d945a"),
                            EmailAdress = "admin@admincom",
                            PasswordHash = new byte[] { 19, 2, 216, 121, 140, 157, 21, 75, 129, 194, 123, 124, 42, 40, 193, 158, 31, 196, 187, 215, 32, 0, 205, 66, 136, 102, 40, 67, 55, 1, 57, 126, 138, 2, 225, 23, 250, 103, 91, 76, 246, 62, 138, 90, 72, 90, 205, 213, 117, 132, 193, 205, 202, 11, 43, 79, 23, 156, 93, 78, 103, 197, 54, 252 },
                            PasswordSalt = new byte[] { 121, 111, 230, 106, 196, 98, 49, 246, 65, 61, 139, 88, 57, 192, 97, 102, 99, 31, 71, 83, 218, 57, 81, 8, 234, 139, 111, 159, 241, 194, 117, 145, 169, 221, 123, 192, 60, 72, 249, 133, 37, 93, 101, 54, 54, 168, 95, 116, 81, 103, 26, 13, 78, 17, 209, 122, 254, 59, 76, 113, 70, 125, 99, 77, 244, 62, 132, 158, 35, 180, 92, 10, 182, 70, 7, 190, 107, 190, 152, 239, 128, 162, 128, 110, 64, 34, 11, 192, 11, 85, 166, 43, 224, 184, 217, 176, 5, 13, 149, 30, 115, 108, 7, 149, 59, 125, 215, 25, 160, 248, 60, 147, 37, 126, 65, 107, 174, 91, 228, 110, 105, 51, 32, 121, 209, 118, 3, 132 }
                        });
                });

            modelBuilder.Entity("EntityLayer.Personel", b =>
                {
                    b.HasOne("EntityLayer.Birim", "Birim")
                        .WithMany("Personeller")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");
                });

            modelBuilder.Entity("EntityLayer.Birim", b =>
                {
                    b.Navigation("Personeller");
                });
#pragma warning restore 612, 618
        }
    }
}
